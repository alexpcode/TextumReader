@using TextumReader.ProblemDomain
@model IList<TextumReader.WebUI.Models.WordViewModel>
@{
    ViewBag.Title = "Textum Reader - Word List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
    
@section scripts
{
    <script>
        $((function() {
            $("form.confirmable").submit(function(e) {
                e.preventDefault();
                var currentForm = this;
                bootbox.confirm("Are you sure?", function(result) {
                    if (result) {
                        currentForm.submit();
                    }
                });
            });

            $("table").tablesorter({ headers: { 0: { sorter: false }, 3: { sorter: false } } });
            $(".alert").fadeOut(4000);

            $(".addedToAnki").qtip({
                content: {
                    text: "Already added to Anki",
                },
                style: { classes: "qtip-bootstrap" }
            });

            $("#check-all").click(function() {
                if (this.checked) {

                    $('.wcheckbox').each(function (e) { 
                        if (!$(this).hasClass('addedToAnki')) {
                            this.checked = true; 
                        }
                    });
                } else {
                    $('.wcheckbox').each(function (e) { 
                        this.checked = false;                    
                    });
                }
            });
            
            $("[type=checkbox]").click(function () {
                if ($(":checkbox:checked.wcheckbox").length > 0) {
                    $("#tools").show("slow");
                } else {
                    $("#tools").hide("slow");
                }
            });
        }));
    </script>
}
   

@if (Model.Any())
{
    if (TempData["message"] != null)
    {
        <div class="alert alert-success"><strong>@TempData["message"]</strong></div>
    }
    if (TempData["alert"] != null)
    {
        <div class="alert alert-danger"><strong>@TempData["alert"]</strong></div>
    }

    using (Html.BeginForm())
    {
        <div id="tools" style="display: none; padding-bottom: 20px;">
            <input type="submit" formaction="DeleteWords" value="Delete" class="btn btn-primary btn-sm" />
            <input type="submit" formaction="AddToAnki" value="Add to Anki" class="btn btn-primary btn-sm" />
        </div>
        <table class="table table-striped table-bordered table-hover table-condensed tablesorter wordlist">
            <thead>
                <tr>
                    <th class="centered-column">
                        <input type="checkbox" id="check-all" />
                    </th>
                    <th>Word Name</th>
                    <th>Translations</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.Count(); i++)
                {
                    <tr>
                        <td class="centered-column" style="width: 40px">
                            @Html.HiddenFor(x => Model[i].WordId)
                            @Html.HiddenFor(x => Model[i].DictionaryId)
                            
                            @if (Model[i].IsAddedToAnki)
                            {
                                @Html.CheckBoxFor(x => Model[i].IsSelected, new {@class = "wcheckbox addedToAnki"})
                            }
                            else
                            {
                                @Html.CheckBoxFor(x => Model[i].IsSelected, new {@class = "wcheckbox"})
                            }
                        </td>
                        <td style="width: 140px;">
                            @if (@Model[i].IsAddedToAnki)
                            {
                                <span class="addedToAnki">@Model[i].WordName</span>
                            }
                            else
                            {
                                <strong>@Model[i].WordName</strong>
                            }
                        </td>
                        <td>
                            @foreach (Translation t in Model[i].Translations)
                            {
                                <span class="well well-sm translation">
                                    @t.Value
                                    @using (Html.BeginForm("DeleteTranslation", "Dictionary",
                                        new {id = t.TranslationId}, FormMethod.Post,
                                        new {style = "display:inline;"}))
                                    {
                                        <input class="closeBtn" type="submit" value="&times;" />
                                    }
                                </span>
                            }
                        </td>

                        <td class="buttons centered-column" style="width: 110px;">
                            @using (Html.BeginForm("DeleteWord", "Dictionary", new {id = Model[i].WordId}, FormMethod.Post,
                                new
                                {
                                    style = "display:inline;",
                                    @class = "confirmable"
                                }))
                            {
                                <input type="submit" value="Delete" class="btn btn-primary btn-sm" />
                            }
                        </td>

                    </tr>
                }

            </tbody>
        </table>
    }
}
else
{
    <div class="alert alert-info"><strong>This dictionary doesn't have any words</strong></div>
}